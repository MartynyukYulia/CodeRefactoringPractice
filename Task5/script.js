class Tabs {
    constructor(container) {
        this.container = container;
        this.tabs = [];
        this.init();
    }

    init() {
        this.container.innerHTML = `
            <div class="tabs-nav"></div>
            <div class="tabs-content"></div>
        `;

        this.navContainer = this.container.querySelector('.tabs-nav');
        this.contentContainer = this.container.querySelector('.tabs-content');
    }

    createElement(tag, className) {
        const element = document.createElement(tag);
        if (className) {
            element.classList.add(className);
        }
        return element;
    }

    appendTo(parent, child) {
        parent.appendChild(child);
    }

    addTab(title, content) {
        const tabIndex = this.tabs.length;

        const tabButton = this.createElement('button', 'tab-button');
        tabButton.textContent = title;
        tabButton.addEventListener('click', () => this.showTab(tabIndex));
        this.appendTo(this.navContainer, tabButton);

        // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É –≤–∫–ª–∞–¥–∫–∏
        const tabContent = this.createElement('div', 'tab-content');
        tabContent.innerHTML = content;
        this.appendTo(this.contentContainer, tabContent);

        this.tabs.push({ button: tabButton, content: tabContent });

        if (tabIndex === 0) {
            this.showTab(0);
        }

        return this;
    }

    showTab(index) {
        this.tabs.forEach((tab, i) => {
            if (i === index) {
                tab.button.classList.add('active');
                tab.content.classList.add('active');
            } else {
                tab.button.classList.remove('active');
                tab.content.classList.remove('active');
            }
        });
    }
}

window.onload = function () {
    const tabs = new Tabs(document.getElementById('myTabs'));

    tabs.addTab(
        '–ì–æ–ª–æ–≤–Ω–∞ üè†',
        `<h2>–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –Ω–∞—à–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É! üëã</h2>
        <div class="success-stats">
            <div class="stat-card">
                <div class="stat-number">5000+ –ó–∞–¥–æ–≤–æ–ª–µ–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">98% –ü–æ–∑–∏—Ç–∏–≤–Ω–∏—Ö –≤—ñ–¥–≥—É–∫—ñ–≤</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">10 —Ä–æ–∫—ñ–≤ –Ω–∞ —Ä–∏–Ω–∫—É</div>
            </div>
        </div>`
    )
        .addTab(
            '–ü–æ—Å–ª—É–≥–∏ üõ†Ô∏è',
            `<h2>–ù–∞—à—ñ –ø–æ—Å–ª—É–≥–∏ —Ç–∞ —Ü—ñ–Ω–∏ üí´</h2>
        <div class="feature-card">
            <div class="feature-title">üåê –í–µ–±-—Ä–æ–∑—Ä–æ–±–∫–∞</div>
            <p>–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—É—á–∞—Å–Ω–∏—Ö –≤–µ–±-—Å–∞–π—Ç—ñ–≤ —Ç–∞ –¥–æ–¥–∞—Ç–∫—ñ–≤ –∑ –∞–¥–∞–ø—Ç–∏–≤–Ω–∏–º –¥–∏–∑–∞–π–Ω–æ–º</p>
            <div class="price-tag">–≤—ñ–¥ 10000 ‚Ç¥</div>
        </div>`
        )
        .addTab(
            '–ö–æ–Ω—Ç–∞–∫—Ç–∏ üìû',
            `<h2>–ó–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞–º–∏! ü§ù</h2>
        <div class="contact-info">
            <span>üìç</span>
            <div><strong>–ê–¥—Ä–µ—Å–∞:</strong><br>–º. –ñ–∏—Ç–æ–º–∏—Ä, –≤—É–ª. –ß—É–¥–Ω—ñ–≤—Å—å–∫–∞, 103</div>
        </div>`
        );
};
